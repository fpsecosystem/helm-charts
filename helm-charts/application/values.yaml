# Application Example Values
# Universal chart for WordPress, Laravel, Symfony and other PHP applications
# Just provide your application image and this chart handles the rest

# Application configuration
# These values will be added to ConfigMap resources
appConfig:
  # Non-sensitive environment variables (ConfigMap)
  configMap:
    APP_ENV: "prod"
    # Add any non-sensitive env vars here
    # MY_CUSTOM_VAR: "value"
    # MAILER_DSN: "null://null"
controllers:
  main:
    annotations: {}
    labels: {}
    replicas: 1
    containers:
      main:
        image:
          repository: "php:8.2-apache"
          tag: "latest"
          pullPolicy: "Always"
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi

# Service configuration
service:
  main:
    ports:
      http:
        port: 80
        targetPort: 80
        protocol: HTTP

# Ingress configuration
ingress:
  main:
    enabled: true
    className: ""
    annotations: {}
    # Dynamic domain configuration
    # When enabled, the ingress host will be automatically set to {release-name}.{domain}
    # where domain is read from the staging-domain secret
    dynamicDomain: "" # Override this to set a static domain instead of reading from secret
    hosts:
    - host: "placeholder.example.com" # This will be dynamically updated
      paths:
      - path: /
        pathType: Prefix
        service:
          name: main
          port: http
    tls: []

# Database connection configuration (example for MariaDB)
database:
  # MariaDB reference for operator-based dynamic detection
  mariaDbRef:
    name: "mariadb" # Name of MariaDB custom resource
    namespace: "database" # Uses the same namespace as the release

  # Connection options for DATABASE_URL
  options:
    charset: "utf8mb4"
    # Additional DBAL options
    driverOptions: {}
  # Optional: Override automatic detection with custom values
  # server:
  #   host: "custom-mariadb.example.com"
  #   port: 3307
  # options:
  #   serverVersion: "10.6.0-MariaDB"

  # Persistence configuration
persistence:
  # App data persistence (for user uploads, cache, logs, etc.)
  app-data:
    enabled: true
    type: persistentVolumeClaim
    size: 8Gi
    storageClass: "" # Use default storage class
    accessMode: ReadWriteOnce
    retain: true
    globalMounts:
    - path: /var/www/html/storage
      readOnly: false
    # Framework-specific mount points:
    # WordPress: /var/www/html/wp-content/uploads
    # Symfony: /var/www/html/var
    # Laravel: /var/www/html/storage

    # Shared storage for multi-replica setups
  shared:
    enabled: false
    type: persistentVolumeClaim
    size: 4Gi
    storageClass: "" # Use default storage class
    accessMode: ReadWriteMany # Required for multi-replica
    retain: true
    globalMounts:
    - path: /var/www/html/public/uploads
      readOnly: false

  # Cache storage (optional, for performance)
  cache:
    enabled: false
    type: emptyDir
    medium: Memory
    sizeLimit: 1Gi
    globalMounts:
    - path: /tmp/cache
      readOnly: false

  # Session storage (for sticky sessions or shared sessions)
  sessions:
    enabled: false
    type: persistentVolumeClaim
    size: 1Gi
    storageClass: ""
    accessMode: ReadWriteOnce
    retain: false
    globalMounts:
    - path: /var/www/html/var/sessions
      readOnly: false

# Common labels and annotations
commonLabels:
  app.kubernetes.io/component: "web-application"
  app.kubernetes.io/part-of: "php-stack"

commonAnnotations:
  "helm.sh/resource-policy": "keep"
