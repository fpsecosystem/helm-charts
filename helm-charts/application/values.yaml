# Application Example Values
# Universal chart for WordPress, Laravel, Symfony and other PHP applications
# Just provide your application image and this chart handles the rest

# Application configuration
# These values will be added to ConfigMap resources
appConfig:
  # Framework detection - automatically configures database variables
  # Supported: wordpress, laravel, symfony
  framework: ""

  # Non-sensitive environment variables (ConfigMap)
  configMap:
    APP_ENV: "prod"
    # Add any non-sensitive env vars here
    # MY_CUSTOM_VAR: "value"
    # MAILER_DSN: "null://null"
controllers:
  main:
    annotations: {}
    labels: {}
    replicas: 1
    containers:
      main:
        image:
          repository: "php:8.2-apache"
          tag: "latest"
          pullPolicy: "Always"
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi

# Service configuration
service:
  main:
    ports:
      http:
        port: 80
        targetPort: 80
        protocol: HTTP

# Ingress configuration
ingress:
  main:
    enabled: true
    className: ""
    annotations: {}
    # Dynamic domain configuration
    # When enabled, the ingress host will be automatically set to {release-name}.{domain}
    # where domain is read from the staging-domain secret
    dynamicDomain: "" # Override this to set a static domain instead of reading from secret
    hosts:
    - host: "placeholder.example.com" # This will be dynamically updated
      paths:
      - path: /
        pathType: Prefix
        service:
          identifier: main
          port: http
    tls: []

  # Test ingress (only for development/testing)
  test:
    enabled: false

# MariaDB configuration
mariadb:
  # Enable MariaDB resources (database, user, grant, secret)
  enabled: false

  # MariaDB instance reference (used by all resources: Database, User, Grant)
  mariaDbRef:
    # Name of the MariaDB instance
    name: "mariadb"
    # Namespace of the MariaDB instance (optional, defaults to release namespace)
    namespace: ""

  # Database configuration
  database:
    # Enable database creation
    enabled: true
    # Database name (if empty, will use {release-name}-db)
    name: ""
    # Character set for the database
    characterSet: "utf8mb4"
    # Collation for the database
    collate: "utf8mb4_unicode_ci"
    # Additional labels for the database resource
    labels: {}
    # Additional annotations for the database resource
    annotations: {}

  # User configuration
  user:
    # Enable user creation
    enabled: true
    # Username (if empty, will use {release-name}-user)
    name: ""
    # Password secret configuration
    passwordSecret:
      # Name of the secret containing the password (if empty, will use {release-name}-password)
      name: ""
      # Key in the secret containing the password
      key: "password"
      # If true, will generate a secret with random password
      generate: true
      # Length of generated password  
      passwordLength: 16
    # Host from which the user can connect (% for any host)
    host: "%"
    # Maximum user connections
    maxUserConnections: 10
    # Additional labels for the user resource
    labels: {}
    # Additional annotations for the user resource
    annotations: {}

  # Grant configuration
  grant:
    # Enable grant creation
    enabled: true
    # Database to grant permissions on (if empty, will use database name)
    database: ""
    # User to grant permissions to (if empty, will use user name)
    username: ""
    # Table to grant permissions on (* for all tables)
    table: "*"
    # Privileges to grant
    privileges:
    - "SELECT"
    - "INSERT"
    - "UPDATE"
    - "DELETE"
    - "CREATE"
    - "DROP"
    - "INDEX"
    - "ALTER"
    # Host from which the user can connect
    host: "%"
    # Additional labels for the grant resource
    labels: {}
    # Additional annotations for the grant resource
    annotations: {}

  # Connection options for DATABASE_URL generation
  connection:
    # Database server options
    server:
      # Override host detection (leave empty for automatic detection)
      host: ""
      # Override port detection (leave empty for automatic detection)  
      port: ""
    # Connection options
    options:
      charset: "utf8mb4"
      # Additional DBAL options
      driverOptions: {}

# Persistence configuration
persistence:
  # App data persistence (for user uploads, cache, logs, etc.)
  app-data:
    enabled: true
    type: persistentVolumeClaim
    size: 8Gi
    storageClass: "" # Use default storage class
    accessMode: ReadWriteOnce
    retain: true
    globalMounts:
    - path: /var/www/html/storage
      readOnly: false
    # Framework-specific mount points:
    # WordPress: /var/www/html/wp-content/uploads
    # Symfony: /var/www/html/var
    # Laravel: /var/www/html/storage

    # Shared storage for multi-replica setups
  shared:
    enabled: false
    type: persistentVolumeClaim
    size: 4Gi
    storageClass: "" # Use default storage class
    accessMode: ReadWriteMany # Required for multi-replica
    retain: true
    globalMounts:
    - path: /var/www/html/public/uploads
      readOnly: false

  # Cache storage (optional, for performance)
  cache:
    enabled: false
    type: emptyDir
    medium: Memory
    sizeLimit: 1Gi
    globalMounts:
    - path: /tmp/cache
      readOnly: false

  # Session storage (for sticky sessions or shared sessions)
  sessions:
    enabled: false
    type: persistentVolumeClaim
    size: 1Gi
    storageClass: ""
    accessMode: ReadWriteOnce
    retain: false
    globalMounts:
    - path: /var/www/html/var/sessions
      readOnly: false

# Common labels and annotations
commonLabels:
  app.kubernetes.io/component: "web-application"
  app.kubernetes.io/part-of: "php-stack"

commonAnnotations:
  "helm.sh/resource-policy": "keep"
