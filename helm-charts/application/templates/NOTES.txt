1. Get the application URL by running these commands:
{{- if and .Values.ingress.main (hasKey .Values.ingress.main "enabled") (eq .Values.ingress.main.enabled true) }}
{{- range $host := .Values.ingress.main.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.main.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "application.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:8000
{{- end }}

2. Database connection details (dynamically detected from MariaDB operator):
   - Database URL: {{ include "application.databaseUrl" . }}
   - Database Host: {{ include "application.mariadbHost" . }}
   - Database Port: {{ include "application.mariadbPort" . }}
   - Database Version: {{ include "application.mariadbVersion" . }}
   - Database Name: {{ printf "%s-db" (include "application.fullname" .) }}
   - Database User: {{ printf "%s-user" (include "application.fullname" .) }}
   - Image: {{ .Values.controllers.main.containers.main.image.repository }}:{{ .Values.controllers.main.containers.main.image.tag }}

3. To get the database password:
   kubectl get secret --namespace {{ .Release.Namespace }} {{ include "application.databasePasswordSecretName" . }} -o jsonpath="{.data.{{ include "application.databasePasswordSecretKey" . }}}" | base64 --decode

4. Application deployment details:
   - Environment: {{ .Values.appConfig.APP_ENV }}
   - Image: {{ .Values.controllers.main.containers.main.image.repository }}:{{ .Values.controllers.main.containers.main.image.tag }}
   - Pull Policy: {{ .Values.controllers.main.containers.main.image.pullPolicy }}

5. To connect to the database directly:
   kubectl run {{ include "application.fullname" . }}-mysql-client --rm --tty -i --restart='Never' --image docker.io/bitnami/mysql:8.0-debian-11 --namespace {{ .Release.Namespace }} --command -- mysql -h {{ include "application.mariadbHost" . }} -P {{ include "application.mariadbPort" . }} -u {{ printf "%s-user" (include "application.fullname" .) }} -p{{ `$(kubectl get secret --namespace {{ .Release.Namespace }} {{ include "application.databasePasswordSecretName" . }} -o jsonpath="{.data.{{ include "application.databasePasswordSecretKey" . }}}" | base64 --decode)` }} {{ printf "%s-db" (include "application.fullname" .) }}

{{ if eq .Values.appConfig.APP_ENV "dev" }}
‚ö†Ô∏è  WARNING: The application is running in development mode.
   Make sure to set appConfig.APP_ENV to "prod" for production deployments.
{{ end }}

üéâ Your Symfony application is now deployed with MariaDB integration!
   The DATABASE_URL environment variable is automatically configured
   and ready to use in your Symfony application.
